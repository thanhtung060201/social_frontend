{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { InjectionToken, Injectable, Optional, Inject, NgModule } from '@angular/core';\nimport { DateAdapter, MAT_DATE_LOCALE, MAT_DATE_FORMATS } from '@angular/material/core';\nimport * as _rollupMoment from 'moment';\nimport _rollupMoment__default from 'moment';\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nconst moment = _rollupMoment__default || _rollupMoment;\n/** InjectionToken for moment date adapter to configure options. */\n\nconst MAT_MOMENT_DATE_ADAPTER_OPTIONS = new InjectionToken('MAT_MOMENT_DATE_ADAPTER_OPTIONS', {\n  providedIn: 'root',\n  factory: MAT_MOMENT_DATE_ADAPTER_OPTIONS_FACTORY\n});\n/** @docs-private */\n\nfunction MAT_MOMENT_DATE_ADAPTER_OPTIONS_FACTORY() {\n  return {\n    useUtc: false\n  };\n}\n/** Creates an array and fills it with values. */\n\n\nfunction range(length, valueFunction) {\n  const valuesArray = Array(length);\n\n  for (let i = 0; i < length; i++) {\n    valuesArray[i] = valueFunction(i);\n  }\n\n  return valuesArray;\n}\n/** Adapts Moment.js Dates for use with Angular Material. */\n\n\nclass MomentDateAdapter extends DateAdapter {\n  constructor(dateLocale, _options) {\n    super();\n    this._options = _options;\n    this.setLocale(dateLocale || moment.locale());\n  }\n\n  setLocale(locale) {\n    super.setLocale(locale);\n    let momentLocaleData = moment.localeData(locale);\n    this._localeData = {\n      firstDayOfWeek: momentLocaleData.firstDayOfWeek(),\n      longMonths: momentLocaleData.months(),\n      shortMonths: momentLocaleData.monthsShort(),\n      dates: range(31, i => this.createDate(2017, 0, i + 1).format('D')),\n      longDaysOfWeek: momentLocaleData.weekdays(),\n      shortDaysOfWeek: momentLocaleData.weekdaysShort(),\n      narrowDaysOfWeek: momentLocaleData.weekdaysMin()\n    };\n  }\n\n  getYear(date) {\n    return this.clone(date).year();\n  }\n\n  getMonth(date) {\n    return this.clone(date).month();\n  }\n\n  getDate(date) {\n    return this.clone(date).date();\n  }\n\n  getDayOfWeek(date) {\n    return this.clone(date).day();\n  }\n\n  getMonthNames(style) {\n    // Moment.js doesn't support narrow month names, so we just use short if narrow is requested.\n    return style == 'long' ? this._localeData.longMonths : this._localeData.shortMonths;\n  }\n\n  getDateNames() {\n    return this._localeData.dates;\n  }\n\n  getDayOfWeekNames(style) {\n    if (style == 'long') {\n      return this._localeData.longDaysOfWeek;\n    }\n\n    if (style == 'short') {\n      return this._localeData.shortDaysOfWeek;\n    }\n\n    return this._localeData.narrowDaysOfWeek;\n  }\n\n  getYearName(date) {\n    return this.clone(date).format('YYYY');\n  }\n\n  getFirstDayOfWeek() {\n    return this._localeData.firstDayOfWeek;\n  }\n\n  getNumDaysInMonth(date) {\n    return this.clone(date).daysInMonth();\n  }\n\n  clone(date) {\n    return date.clone().locale(this.locale);\n  }\n\n  createDate(year, month, date) {\n    // Moment.js will create an invalid date if any of the components are out of bounds, but we\n    // explicitly check each case so we can throw more descriptive errors.\n    if (typeof ngDevMode === 'undefined' || ngDevMode) {\n      if (month < 0 || month > 11) {\n        throw Error(`Invalid month index \"${month}\". Month index has to be between 0 and 11.`);\n      }\n\n      if (date < 1) {\n        throw Error(`Invalid date \"${date}\". Date has to be greater than 0.`);\n      }\n    }\n\n    const result = this._createMoment({\n      year,\n      month,\n      date\n    }).locale(this.locale); // If the result isn't valid, the date must have been out of bounds for this month.\n\n\n    if (!result.isValid() && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n      throw Error(`Invalid date \"${date}\" for month with index \"${month}\".`);\n    }\n\n    return result;\n  }\n\n  today() {\n    return this._createMoment().locale(this.locale);\n  }\n\n  parse(value, parseFormat) {\n    if (value && typeof value == 'string') {\n      return this._createMoment(value, parseFormat, this.locale);\n    }\n\n    return value ? this._createMoment(value).locale(this.locale) : null;\n  }\n\n  format(date, displayFormat) {\n    date = this.clone(date);\n\n    if (!this.isValid(date) && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n      throw Error('MomentDateAdapter: Cannot format invalid date.');\n    }\n\n    return date.format(displayFormat);\n  }\n\n  addCalendarYears(date, years) {\n    return this.clone(date).add({\n      years\n    });\n  }\n\n  addCalendarMonths(date, months) {\n    return this.clone(date).add({\n      months\n    });\n  }\n\n  addCalendarDays(date, days) {\n    return this.clone(date).add({\n      days\n    });\n  }\n\n  toIso8601(date) {\n    return this.clone(date).format();\n  }\n  /**\n   * Returns the given value if given a valid Moment or null. Deserializes valid ISO 8601 strings\n   * (https://www.ietf.org/rfc/rfc3339.txt) and valid Date objects into valid Moments and empty\n   * string into null. Returns an invalid date for all other values.\n   */\n\n\n  deserialize(value) {\n    let date;\n\n    if (value instanceof Date) {\n      date = this._createMoment(value).locale(this.locale);\n    } else if (this.isDateInstance(value)) {\n      // Note: assumes that cloning also sets the correct locale.\n      return this.clone(value);\n    }\n\n    if (typeof value === 'string') {\n      if (!value) {\n        return null;\n      }\n\n      date = this._createMoment(value, moment.ISO_8601).locale(this.locale);\n    }\n\n    if (date && this.isValid(date)) {\n      return this._createMoment(date).locale(this.locale);\n    }\n\n    return super.deserialize(value);\n  }\n\n  isDateInstance(obj) {\n    return moment.isMoment(obj);\n  }\n\n  isValid(date) {\n    return this.clone(date).isValid();\n  }\n\n  invalid() {\n    return moment.invalid();\n  }\n  /** Creates a Moment instance while respecting the current UTC settings. */\n\n\n  _createMoment(date, format, locale) {\n    const {\n      strict,\n      useUtc\n    } = this._options || {};\n    return useUtc ? moment.utc(date, format, locale, strict) : moment(date, format, locale, strict);\n  }\n\n}\n\nMomentDateAdapter.ɵfac = function MomentDateAdapter_Factory(t) {\n  return new (t || MomentDateAdapter)(i0.ɵɵinject(MAT_DATE_LOCALE, 8), i0.ɵɵinject(MAT_MOMENT_DATE_ADAPTER_OPTIONS, 8));\n};\n\nMomentDateAdapter.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: MomentDateAdapter,\n  factory: MomentDateAdapter.ɵfac\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MomentDateAdapter, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [MAT_DATE_LOCALE]\n      }]\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [MAT_MOMENT_DATE_ADAPTER_OPTIONS]\n      }]\n    }];\n  }, null);\n})();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nconst MAT_MOMENT_DATE_FORMATS = {\n  parse: {\n    dateInput: 'l'\n  },\n  display: {\n    dateInput: 'l',\n    monthYearLabel: 'MMM YYYY',\n    dateA11yLabel: 'LL',\n    monthYearA11yLabel: 'MMMM YYYY'\n  }\n};\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nclass MomentDateModule {}\n\nMomentDateModule.ɵfac = function MomentDateModule_Factory(t) {\n  return new (t || MomentDateModule)();\n};\n\nMomentDateModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: MomentDateModule\n});\nMomentDateModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  providers: [{\n    provide: DateAdapter,\n    useClass: MomentDateAdapter,\n    deps: [MAT_DATE_LOCALE, MAT_MOMENT_DATE_ADAPTER_OPTIONS]\n  }]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MomentDateModule, [{\n    type: NgModule,\n    args: [{\n      providers: [{\n        provide: DateAdapter,\n        useClass: MomentDateAdapter,\n        deps: [MAT_DATE_LOCALE, MAT_MOMENT_DATE_ADAPTER_OPTIONS]\n      }]\n    }]\n  }], null, null);\n})();\n\nclass MatMomentDateModule {}\n\nMatMomentDateModule.ɵfac = function MatMomentDateModule_Factory(t) {\n  return new (t || MatMomentDateModule)();\n};\n\nMatMomentDateModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: MatMomentDateModule\n});\nMatMomentDateModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  providers: [{\n    provide: MAT_DATE_FORMATS,\n    useValue: MAT_MOMENT_DATE_FORMATS\n  }],\n  imports: [[MomentDateModule]]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatMomentDateModule, [{\n    type: NgModule,\n    args: [{\n      imports: [MomentDateModule],\n      providers: [{\n        provide: MAT_DATE_FORMATS,\n        useValue: MAT_MOMENT_DATE_FORMATS\n      }]\n    }]\n  }], null, null);\n})();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { MAT_MOMENT_DATE_ADAPTER_OPTIONS, MAT_MOMENT_DATE_ADAPTER_OPTIONS_FACTORY, MAT_MOMENT_DATE_FORMATS, MatMomentDateModule, MomentDateAdapter, MomentDateModule };","map":{"version":3,"sources":["C:/Users/hiepx/Documents/DATN/social-frontend/frontend/node_modules/.pnpm/@angular+material-moment-adapter@13.3.9_@angular+core@13.3.12_@angular+material@13.3.9_moment@2.30.1/node_modules/@angular/material-moment-adapter/fesm2015/material-moment-adapter.mjs"],"names":["i0","InjectionToken","Injectable","Optional","Inject","NgModule","DateAdapter","MAT_DATE_LOCALE","MAT_DATE_FORMATS","_rollupMoment","_rollupMoment__default","moment","MAT_MOMENT_DATE_ADAPTER_OPTIONS","providedIn","factory","MAT_MOMENT_DATE_ADAPTER_OPTIONS_FACTORY","useUtc","range","length","valueFunction","valuesArray","Array","i","MomentDateAdapter","constructor","dateLocale","_options","setLocale","locale","momentLocaleData","localeData","_localeData","firstDayOfWeek","longMonths","months","shortMonths","monthsShort","dates","createDate","format","longDaysOfWeek","weekdays","shortDaysOfWeek","weekdaysShort","narrowDaysOfWeek","weekdaysMin","getYear","date","clone","year","getMonth","month","getDate","getDayOfWeek","day","getMonthNames","style","getDateNames","getDayOfWeekNames","getYearName","getFirstDayOfWeek","getNumDaysInMonth","daysInMonth","ngDevMode","Error","result","_createMoment","isValid","today","parse","value","parseFormat","displayFormat","addCalendarYears","years","add","addCalendarMonths","addCalendarDays","days","toIso8601","deserialize","Date","isDateInstance","ISO_8601","obj","isMoment","invalid","strict","utc","ɵfac","ɵprov","type","undefined","decorators","args","MAT_MOMENT_DATE_FORMATS","dateInput","display","monthYearLabel","dateA11yLabel","monthYearA11yLabel","MomentDateModule","ɵmod","ɵinj","provide","useClass","deps","providers","MatMomentDateModule","useValue","imports"],"mappings":"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","sourcesContent":["import * as i0 from '@angular/core';\nimport { InjectionToken, Injectable, Optional, Inject, NgModule } from '@angular/core';\nimport { DateAdapter, MAT_DATE_LOCALE, MAT_DATE_FORMATS } from '@angular/material/core';\nimport * as _rollupMoment from 'moment';\nimport _rollupMoment__default from 'moment';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst moment = _rollupMoment__default || _rollupMoment;\n/** InjectionToken for moment date adapter to configure options. */\nconst MAT_MOMENT_DATE_ADAPTER_OPTIONS = new InjectionToken('MAT_MOMENT_DATE_ADAPTER_OPTIONS', {\n    providedIn: 'root',\n    factory: MAT_MOMENT_DATE_ADAPTER_OPTIONS_FACTORY,\n});\n/** @docs-private */\nfunction MAT_MOMENT_DATE_ADAPTER_OPTIONS_FACTORY() {\n    return {\n        useUtc: false,\n    };\n}\n/** Creates an array and fills it with values. */\nfunction range(length, valueFunction) {\n    const valuesArray = Array(length);\n    for (let i = 0; i < length; i++) {\n        valuesArray[i] = valueFunction(i);\n    }\n    return valuesArray;\n}\n/** Adapts Moment.js Dates for use with Angular Material. */\nclass MomentDateAdapter extends DateAdapter {\n    constructor(dateLocale, _options) {\n        super();\n        this._options = _options;\n        this.setLocale(dateLocale || moment.locale());\n    }\n    setLocale(locale) {\n        super.setLocale(locale);\n        let momentLocaleData = moment.localeData(locale);\n        this._localeData = {\n            firstDayOfWeek: momentLocaleData.firstDayOfWeek(),\n            longMonths: momentLocaleData.months(),\n            shortMonths: momentLocaleData.monthsShort(),\n            dates: range(31, i => this.createDate(2017, 0, i + 1).format('D')),\n            longDaysOfWeek: momentLocaleData.weekdays(),\n            shortDaysOfWeek: momentLocaleData.weekdaysShort(),\n            narrowDaysOfWeek: momentLocaleData.weekdaysMin(),\n        };\n    }\n    getYear(date) {\n        return this.clone(date).year();\n    }\n    getMonth(date) {\n        return this.clone(date).month();\n    }\n    getDate(date) {\n        return this.clone(date).date();\n    }\n    getDayOfWeek(date) {\n        return this.clone(date).day();\n    }\n    getMonthNames(style) {\n        // Moment.js doesn't support narrow month names, so we just use short if narrow is requested.\n        return style == 'long' ? this._localeData.longMonths : this._localeData.shortMonths;\n    }\n    getDateNames() {\n        return this._localeData.dates;\n    }\n    getDayOfWeekNames(style) {\n        if (style == 'long') {\n            return this._localeData.longDaysOfWeek;\n        }\n        if (style == 'short') {\n            return this._localeData.shortDaysOfWeek;\n        }\n        return this._localeData.narrowDaysOfWeek;\n    }\n    getYearName(date) {\n        return this.clone(date).format('YYYY');\n    }\n    getFirstDayOfWeek() {\n        return this._localeData.firstDayOfWeek;\n    }\n    getNumDaysInMonth(date) {\n        return this.clone(date).daysInMonth();\n    }\n    clone(date) {\n        return date.clone().locale(this.locale);\n    }\n    createDate(year, month, date) {\n        // Moment.js will create an invalid date if any of the components are out of bounds, but we\n        // explicitly check each case so we can throw more descriptive errors.\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            if (month < 0 || month > 11) {\n                throw Error(`Invalid month index \"${month}\". Month index has to be between 0 and 11.`);\n            }\n            if (date < 1) {\n                throw Error(`Invalid date \"${date}\". Date has to be greater than 0.`);\n            }\n        }\n        const result = this._createMoment({ year, month, date }).locale(this.locale);\n        // If the result isn't valid, the date must have been out of bounds for this month.\n        if (!result.isValid() && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw Error(`Invalid date \"${date}\" for month with index \"${month}\".`);\n        }\n        return result;\n    }\n    today() {\n        return this._createMoment().locale(this.locale);\n    }\n    parse(value, parseFormat) {\n        if (value && typeof value == 'string') {\n            return this._createMoment(value, parseFormat, this.locale);\n        }\n        return value ? this._createMoment(value).locale(this.locale) : null;\n    }\n    format(date, displayFormat) {\n        date = this.clone(date);\n        if (!this.isValid(date) && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw Error('MomentDateAdapter: Cannot format invalid date.');\n        }\n        return date.format(displayFormat);\n    }\n    addCalendarYears(date, years) {\n        return this.clone(date).add({ years });\n    }\n    addCalendarMonths(date, months) {\n        return this.clone(date).add({ months });\n    }\n    addCalendarDays(date, days) {\n        return this.clone(date).add({ days });\n    }\n    toIso8601(date) {\n        return this.clone(date).format();\n    }\n    /**\n     * Returns the given value if given a valid Moment or null. Deserializes valid ISO 8601 strings\n     * (https://www.ietf.org/rfc/rfc3339.txt) and valid Date objects into valid Moments and empty\n     * string into null. Returns an invalid date for all other values.\n     */\n    deserialize(value) {\n        let date;\n        if (value instanceof Date) {\n            date = this._createMoment(value).locale(this.locale);\n        }\n        else if (this.isDateInstance(value)) {\n            // Note: assumes that cloning also sets the correct locale.\n            return this.clone(value);\n        }\n        if (typeof value === 'string') {\n            if (!value) {\n                return null;\n            }\n            date = this._createMoment(value, moment.ISO_8601).locale(this.locale);\n        }\n        if (date && this.isValid(date)) {\n            return this._createMoment(date).locale(this.locale);\n        }\n        return super.deserialize(value);\n    }\n    isDateInstance(obj) {\n        return moment.isMoment(obj);\n    }\n    isValid(date) {\n        return this.clone(date).isValid();\n    }\n    invalid() {\n        return moment.invalid();\n    }\n    /** Creates a Moment instance while respecting the current UTC settings. */\n    _createMoment(date, format, locale) {\n        const { strict, useUtc } = this._options || {};\n        return useUtc ? moment.utc(date, format, locale, strict) : moment(date, format, locale, strict);\n    }\n}\nMomentDateAdapter.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MomentDateAdapter, deps: [{ token: MAT_DATE_LOCALE, optional: true }, { token: MAT_MOMENT_DATE_ADAPTER_OPTIONS, optional: true }], target: i0.ɵɵFactoryTarget.Injectable });\nMomentDateAdapter.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MomentDateAdapter });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MomentDateAdapter, decorators: [{\n            type: Injectable\n        }], ctorParameters: function () {\n        return [{ type: undefined, decorators: [{\n                        type: Optional\n                    }, {\n                        type: Inject,\n                        args: [MAT_DATE_LOCALE]\n                    }] }, { type: undefined, decorators: [{\n                        type: Optional\n                    }, {\n                        type: Inject,\n                        args: [MAT_MOMENT_DATE_ADAPTER_OPTIONS]\n                    }] }];\n    } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst MAT_MOMENT_DATE_FORMATS = {\n    parse: {\n        dateInput: 'l',\n    },\n    display: {\n        dateInput: 'l',\n        monthYearLabel: 'MMM YYYY',\n        dateA11yLabel: 'LL',\n        monthYearA11yLabel: 'MMMM YYYY',\n    },\n};\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MomentDateModule {\n}\nMomentDateModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MomentDateModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nMomentDateModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MomentDateModule });\nMomentDateModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MomentDateModule, providers: [\n        {\n            provide: DateAdapter,\n            useClass: MomentDateAdapter,\n            deps: [MAT_DATE_LOCALE, MAT_MOMENT_DATE_ADAPTER_OPTIONS],\n        },\n    ] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MomentDateModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    providers: [\n                        {\n                            provide: DateAdapter,\n                            useClass: MomentDateAdapter,\n                            deps: [MAT_DATE_LOCALE, MAT_MOMENT_DATE_ADAPTER_OPTIONS],\n                        },\n                    ],\n                }]\n        }] });\nclass MatMomentDateModule {\n}\nMatMomentDateModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatMomentDateModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nMatMomentDateModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatMomentDateModule, imports: [MomentDateModule] });\nMatMomentDateModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatMomentDateModule, providers: [{ provide: MAT_DATE_FORMATS, useValue: MAT_MOMENT_DATE_FORMATS }], imports: [[MomentDateModule]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatMomentDateModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [MomentDateModule],\n                    providers: [{ provide: MAT_DATE_FORMATS, useValue: MAT_MOMENT_DATE_FORMATS }],\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_MOMENT_DATE_ADAPTER_OPTIONS, MAT_MOMENT_DATE_ADAPTER_OPTIONS_FACTORY, MAT_MOMENT_DATE_FORMATS, MatMomentDateModule, MomentDateAdapter, MomentDateModule };\n"]},"metadata":{},"sourceType":"module"}